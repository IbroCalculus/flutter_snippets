Riverpod is the successor to the Provider package to fix some issues by the Provider package.

-------------------------------------------------------------------------------------------------

  flutter_riverpod: ^2.6.1



---- Create a RiverpodNotifier Class (riverpod_notifier.dart) ----

import 'package:flutter/foundation.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

final riverpodProvider = ChangeNotifierProvider.autoDispose<RiverpodNotifier>((ref) => RiverpodNotifier(),);

class RiverpodNotifier extends ChangeNotifier{
  int _counter = 0;
  int get counter => _counter;

  void incrementCounter() {
    _counter++;
    notifyListeners();
  }}



----- main.dart -------------

import 'package:flutter_riverpod/flutter_riverpod.dart';

void main() {
  runApp(
      ProviderScope(child: const MyApp())
  );
}


---- home_page.dart ----------

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:flutter_riverpod_demo/pages/seond_page.dart';
import '../utils/riverpod_notifier.dart';

class HomePage extends ConsumerWidget {           	    // NB: THIS now extends ConsumerWidget instead of Stateless widget
  const HomePage({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {       // ====== THIS ie Widget ref

    final appNotifier = ref.watch(riverpodProvider);        // ====== THIS as well

    return Scaffold(
      appBar: AppBar(
        title: Text('Home Page'),
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
      ),
      
      
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [

            // =========== HERE, Method 1 of getting value ================
            Consumer(
              builder: (BuildContext context, WidgetRef ref, Widget? child) {
                return Text(
                  'Count value: ${appNotifier.counter}',
                  style: TextStyle(fontSize: 24.0),
                );
              },
            ),

            Text('${appNotifier.counter}', style: TextStyle(fontSize: 64.0)),   // =========== HERE, method 2 of getting value ================

            ElevatedButton(onPressed: () {
              Navigator.push(context, MaterialPageRoute(builder: (context) => SecondPage()));
            }, child: Text("Go to Page 2"),),
          ],
        ),
      ),
      
      
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          appNotifier.incrementCounter();             // =========== HERE, for setting value ================
        },
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ),
    );
  }
}

