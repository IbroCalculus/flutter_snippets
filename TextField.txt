CHECK ALSO; TextButton.txt

NB: They are two basic widgets for creating a textfield. They are; TextField() and TextFormField() (RECOMMENDED)
    There's also FormBuilderTextField() from FormBuilder library.

NB: They are two ways to get data from a TextField. 1. Using the onChange() event, and 2. Use Controller, or ID (RECOMMENDED; Check below). 

NB: To pass value from a texfield in one activity to another, check: Intent.txt and/or Navigation.txt.

By default, width = match_parent. ie 

              TextField(
                        controller: _nameController,
                        validator: (value) {
                          if(value == null || value == ""){
                            return "Please enter your name";
                          }else{
                            return null;
                          }
                        },

                decoration: InputDecoration(
                  hintText: "Product Name",
                  // icon: Icon(Icons.verified_user_outlined),
                  prefixIcon: Icon(Icons.add_alarm_sharp,), // This icon will be within the Textfield
                ),
              ),
              SizedBox(height: 20.0,),


              TextFormField(
                decoration: InputDecoration(
                  labelText: "Product Name",
                  // icon: Icon(Icons.verified_user_outlined),
                  prefixIcon: Icon(Icons.account_box_outlined), // This icon will be within the Textfield
                  border: OutlineInputBorder(),
                ),
              ),

--------------------------------- Access Value from a TextField using onChanged() -------------------

  var _productName;

              TextFormField(
                onChanged: (value) {
                  _productName = value;
                  setState(() {});
                },
                decoration: InputDecoration(
                  labelText: "Product Name",
                  // icon: Icon(Icons.verified_user_outlined),
                  prefixIcon: Icon(Icons.verified_user_outlined), // This icon will be within
                  border: OutlineInputBorder(),
                ),
              ),
              Text("Product Name is: $_productName")


--------------------------------- Access Value from a TextField using Controller -------------------

class _DashboardState extends State<Dashboard> {

  final TextEditingController _usernameController = TextEditingController();		// Declare these controllers, for two Textfields individually
  final TextEditingController _passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {

----

            TextField(
              controller: _usernameController,					// HERE
              decoration: InputDecoration(
                  labelText: "Username:",
                  prefixIcon: Icon(Icons.person_2),
                  border: OutlineInputBorder(
                    borderSide: BorderSide(color: Colors.blue),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Colors.black, width: 2.0),
                  )), // Adjust the margin as needed
            ),

            TextField(
              controller: _passwordController,					// HERE
              obscureText: true,
              decoration: InputDecoration(
                  labelText: "Password:",
                  prefixIcon: Icon(Icons.person_2),
                  border: OutlineInputBorder(),
                  focusedBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Colors.black, width: 2.0),
                  )), // Adjust the margin as needed
            ),

            Container(
              width: double.maxFinite,
              child: ElevatedButton(
                  onPressed: () {
                    var username = _usernameController.text;
                    var password = _passwordController.text;
                    print("Enter username: $username \nEntered password: $password");
                  },
                  child: Text("Login"),),
            ),


--------------------- To access values from TextField using the onChanged event -------------------------

  int val1 = 0;
  int val2 = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Stateful Widget"),
      ),
      body: Align(
        alignment: Alignment.center,
        child: Column(
          children: [

            FormBuilderTextField(
              name: "val1",
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: "Enter first number"),
              onChanged: (value) {
                setState(() {
                  // val1 = int.tryParse(value!) ?? 0;
                  val1 = int.parse(value.toString());
                });
              },
            ),

            FormBuilderTextField(
              name: "val2",
              keyboardType: TextInputType.number,
              decoration: InputDecoration(labelText: "Enter second number"),
              onChanged: (value) {
                setState(() {
                  // val2 = int.tryParse(value!) ?? 0;
                  val2 = int.parse(value.toString());
                });
              },
            ),
            MaterialButton(
                child: Text("Sum of both"),
                color: Colors.blue,
                textColor: Colors.white,
                onPressed: () {
                  int summation = val1 + val2;
                  print("Summation = $summation");
                },
            ),
          ],
        ),
      ),
    );
  }
}

------------------ OR (Do the setState() only within the Button) -------------------------------

            Padding(
              padding: const EdgeInsets.all(16.0),
              child: FormBuilderTextField(
                name: "tf_1",
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: "Enter first number"),
                onChanged: (value) {
                  val1 = int.parse(value.toString());
                  },
              ),
            ),

            Padding(
              padding: const EdgeInsets.all(16.0),
              child: FormBuilderTextField(
                name: "tf_2",
                keyboardType: TextInputType.number,
                decoration: InputDecoration(labelText: "Enter second number"),
                onChanged: (value) {
                  val2 = int.parse(value.toString());
                },
              ),
            ),

            MaterialButton(
                child: Text("Sum of both"),
                color: Colors.blue,
                textColor: Colors.white,
                onPressed: () {
                  setState(() {
                    int summation = val1 + val2;
                    print("Summ of both is = $summation");
                  });
                },
            ),


--------------------- To access values from Controller using the onChanged event -------------------------
