NB: This does not to work on my emulator, only on real device.

Begin with Firebase setup, before proceeding here:

------------------------------------------------------

  firebase_core: ^3.10.0
  firebase_messaging: ^15.2.0
  flutter_local_notifications: ^18.0.1

        android:usesCleartextTraffic="true"

WITHIN android -> app -> build.gradle;	minSdkVersion 19


- Within lib, create a new folder (firebase) -> firebase_pushnotification.dart (A file containing a dart class responsible for all notification logic)


------------------------ In firebase_pushnotification.dart:   ----------------------------

import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:flutter_prac/main.dart';
import 'package:flutter_prac/main_page.dart';

Future<void> handleBackgroundMessage(RemoteMessage remoteMessage) async {
  print("Notification received from Firebase");
  print("Title: ${remoteMessage.notification?.title}");
  print("body: ${remoteMessage.notification?.body}");
  print("Payload: ${remoteMessage.data}");
}

Future<void> handleForegroundMessage(RemoteMessage remoteMessage) async {
  print("Notification received from Firebase");
  print("Title: ${remoteMessage.notification?.title}");
  print("body: ${remoteMessage.notification?.body}");
  print("Payload: ${remoteMessage.data}");


  // Show local notification when the app is in the foreground
  if (remoteMessage.notification != null) {
    await PushNotification.showLocalNotification(remoteMessage);
  }
}

Future<void> handleOnMessageOpened(RemoteMessage remoteMessage) async {
  if(remoteMessage.notification != null){
    print("Background Notification Tapped");
    print("Title: ${remoteMessage.notification?.title}");
    print("body: ${remoteMessage.notification?.body}");
    print("Payload: ${remoteMessage.data}");

    // Navigate to MainPage when a remote notification is tapped
    navigatorKey.currentState?.push(
      MaterialPageRoute(builder: (context) => MainPage()),
    );
  }
}



class PushNotification{
  static final _firebaseMessaging = FirebaseMessaging.instance;
  static final FlutterLocalNotificationsPlugin _localNotificationsPlugin = FlutterLocalNotificationsPlugin();

//   Request notification permission
  static Future initNotification() async {
    await _firebaseMessaging.requestPermission(
        alert: true,
        announcement: true,
        badge: true,
        carPlay: false,
        criticalAlert: false,
        provisional: false,
        sound: true
    );

    //   Get the device FCM token
    final token = await _firebaseMessaging.getToken();
    print("Device token: $token");

    // Initialize local notifications
    const AndroidInitializationSettings initializationSettingsAndroid = AndroidInitializationSettings('@mipmap/ic_launcher');
    const InitializationSettings initializationSettings = InitializationSettings(android: initializationSettingsAndroid);

    await _localNotificationsPlugin.initialize(
      initializationSettings,
      onDidReceiveNotificationResponse: (NotificationResponse response) async {
        // print("Notification clicked with payload: ${response.payload}");
        print("Local notification clicked");

        // Navigate to HomePage when local notification is tapped
        navigatorKey.currentState?.push(
          MaterialPageRoute(builder: (context) => const MainPage()),
        );
      },
    );

    //  Function to listen to background changes
    FirebaseMessaging.onBackgroundMessage(handleBackgroundMessage);

    // Function to handle message when app is in foreground
    FirebaseMessaging.onMessage.listen(handleForegroundMessage);

    // Function to handle when the user clicks on the notification and the app is in the background
    FirebaseMessaging.onMessageOpenedApp.listen(handleOnMessageOpened);


  }

  // Display local notification
  static Future<void> showLocalNotification(RemoteMessage message) async {
    const AndroidNotificationDetails androidDetails = AndroidNotificationDetails(
      'high_importance_channel', // Channel ID
      'High Importance Notifications', // Channel name
      channelDescription: 'This channel is used for important notifications.',
      importance: Importance.high,
      priority: Priority.high,
      showWhen: true,
    );

    const NotificationDetails platformDetails = NotificationDetails(android: androidDetails);

    await _localNotificationsPlugin.show(
      message.notification.hashCode,
      message.notification?.title ?? 'No title',
      message.notification?.body ?? 'No body',
      platformDetails,
      payload: message.data.toString(), // Optional data payload
    );
  }

}

-------------------------------In main.dart------------------------------------

final navigatorKey = GlobalKey<NavigatorState>();

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  PushNotification.initNotification();

  runApp(MyApp());
}


class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      navigatorKey: navigatorKey,			// Don't forget this
      home: HomePage(),
    );
  }
}