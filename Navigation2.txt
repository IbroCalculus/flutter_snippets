
==================== USING onGenerateRoute =============================

Within lib, create a folder 'routes' -> dart file 'route_generator'

--- Within: route_generator.dart:

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_lesson2/pages/home_page.dart';
import 'package:flutter_lesson2/pages/login_page.dart';
import 'package:flutter_lesson2/pages/practice_page.dart';

class RouteGenerator{
  static Route<dynamic>? generateRoute(RouteSettings settings){
    switch(settings.name){
      case "/":
        return MaterialPageRoute(builder: (context) => HomePage());
      case "/practicePage":
        return MaterialPageRoute(builder: (context) => PracticePage());
      case "/loginPage":
        return MaterialPageRoute(builder: (context) => LoginPage());

      case '/verify_user':
        final args = settings.arguments as VerifyUserArguments;
        return MaterialPageRoute(builder: (context) => VerifyUserScreen(userEmail: args.userEmail, userId: args.userId, isMale: args.isMale,),);

      case '/verify_user2':
        return MaterialPageRoute(
          builder: (context) => VerifyUserScreen2(),
          settings: settings, // Pass settings to the screen
        );

      default:
        return _errorRoute();
    }
  }


  static Route<dynamic> _errorRoute() {
    return MaterialPageRoute(
      builder: (_) {
        return Scaffold(
          appBar: AppBar(
            title: Text('Error'),
          ),
          body: Center(
            child: Text('ERROR: Route not found'),
          ),
        );
      },
    );
  }


}	// End

NB: If error, delete: import 'dart.js' that may import at the top.


--- Within: main.dart:

      initialRoute: "/",
      onGenerateRoute: RouteGenerator.generateRoute,


--- For other activities, as known, use;

                Navigator.pushNamed(context, "/practicePage");


============= For /verify_user: ==============

	1. VerifyUserScreen
class VerifyUserScreen extends StatelessWidget {
  final String userEmail;
  final int userId;
  final bool isMale;

  VerifyUserScreen({
    required this.userEmail,
    required this.userId,
    required this.isMale,
  });

  @override
  Widget build(BuildContext context) {
    // Build your UI using the provided arguments
  }
}

	2. Navigation to VerifyUserScreen

Navigator.pushNamed(context,  '/verify_user',  arguments: VerifyUserArguments(userEmail: 'user@example.com', userId: 123, isMale: true,),);




============= For /verify_user2: ==============

	1. VerifyUserScreen2

class VerifyUserScreen2 extends StatelessWidget {

  @override
  Widget build(BuildContext context) {

    final args = ModalRoute.of(context)?.settings.arguments as Map<String, dynamic>?;

    if (args == null) {
      return Scaffold(
        appBar: AppBar(title: Text('Error')),
        body: Center(child: Text('No user data provided.')),
      );
    }

    return Scaffold(
      appBar: AppBar(title: Text('Verify User')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text('Email: ${args['userEmail']}'),
            Text('User ID: ${args['userId']}'),
            Text('Gender: ${args['isMale'] ? 'Male' : 'Female'}'),
          ],
        ),
      ),
    );
  }
}

	2. Navigation to VerifyUserScreen

Navigator.pushNamed(
  context,
  '/verify_user2',
  arguments: {
    'userEmail': 'user@example.com',
    'userId': 123,
    'isMale': true,
  },
);











